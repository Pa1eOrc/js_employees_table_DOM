{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","table","headers","querySelectorAll","tbody","tbodyRows","rowsArray","Array","from","tBodies","rows","sortingOrder","length","fill","forEach","header","columnIndex","addEventListener","classList","contains","remove","add","sort","a","b","aValue","cells","textContent","trim","bValue","localeCompare","undefined","numeric","row","removeChild","appendChild","tHeader","index","toggle","i","activeRow","form","createElement","headersContent","officeColumnIndex","options","formButton","officeValue","includes","push","label","input","fieldName","select","required","setAttribute","toLowerCase","j","option","value","type","showNotification","title","description","notification","notificationTitle","notificationDescription","setTimeout","updateCellContent","cell","savedContent","cellIndex","enteredText","age","parseInt","isNaN","salary","parseFloat","replace","toLocaleString","e","preventDefault","formInputs","formValues","nameValue","positionValue","ageValue","salaryInput","newRow","newCell","cellValue","reset","clickedElement","target","closest","savedElementContent","tagName","focus","evt","key"],"mappings":"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","file":"main.b5f40397.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\nconst table = body.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tbody = table.querySelector('tbody');\nconst tbodyRows = tbody.querySelectorAll('tr');\nconst rowsArray = Array.from(table.tBodies[0].rows);\nconst sortingOrder = Array(headers.length).fill(0);\n\n// Implementation of table sorting\nheaders.forEach((header, columnIndex) => {\n  header.addEventListener('click', () => {\n    if (header.classList.contains('ascending')) {\n      header.classList.remove('ascending');\n      header.classList.add('descending');\n      sortingOrder[columnIndex] = 1;\n    } else {\n      header.classList.remove('descending');\n      header.classList.add('ascending');\n      sortingOrder[columnIndex] = 0;\n    }\n\n    rowsArray.sort((a, b) => {\n      const aValue = a.cells[columnIndex].textContent.trim();\n      const bValue = b.cells[columnIndex].textContent.trim();\n\n      if (!sortingOrder[columnIndex]) {\n        return aValue.localeCompare(bValue, undefined, { numeric: true });\n      } else {\n        return bValue.localeCompare(aValue, undefined, { numeric: true });\n      }\n    });\n\n    rowsArray.forEach(row => table.tBodies[0].removeChild(row));\n    rowsArray.forEach(row => table.tBodies[0].appendChild(row));\n\n    headers.forEach((tHeader, index) => {\n      if (index === columnIndex) {\n        tHeader.classList.toggle('ascending', sortingOrder[columnIndex] === 0);\n        tHeader.classList.toggle('descending', sortingOrder[columnIndex] === 1);\n      } else {\n        tHeader.classList.remove('ascending', 'descending');\n      }\n    });\n  });\n});\n\n// Realization row select by user clicks\nfor (let i = 0; i < tbodyRows.length; i++) {\n  tbodyRows[i].addEventListener('click', () => {\n    const activeRow = document.querySelector('.active');\n\n    if (activeRow) {\n      activeRow.classList.remove('active');\n    }\n\n    tbodyRows[i].classList.add('active');\n  });\n}\n\n// Creating form\nconst form = document.createElement('form');\nconst headersContent = [];\nconst officeColumnIndex = 2;\nconst options = [];\nconst formButton = document.createElement('button');\n\nform.classList.add('new-employee-form');\nformButton.textContent = 'Save to table';\n\nfor (let i = 1; i < table.rows.length - 1; i++) {\n  const officeValue = table.rows[i].cells[officeColumnIndex].textContent;\n\n  if (!options.includes(officeValue)) {\n    options.push(officeValue);\n  }\n}\n\nfor (let i = 0; i < headers.length / 2; i++) {\n  headersContent.push(headers[i].textContent);\n}\n\nfor (let i = 0; i < headersContent.length; i++) {\n  const label = document.createElement('label');\n  const input = document.createElement('input');\n  const fieldName = headersContent[i];\n\n  label.textContent = headersContent[i] + ':';\n  label.appendChild(input);\n  form.appendChild(label);\n\n  if (i === officeColumnIndex) {\n    const select = document.createElement('select');\n\n    select.required = true;\n    select.setAttribute('data-qa', fieldName.toLowerCase());\n\n    for (let j = 0; j < options.length; j++) {\n      const option = document.createElement('option');\n\n      option.value = options[j];\n      option.textContent = options[j];\n      select.appendChild(option);\n    }\n\n    label.removeChild(input);\n    label.appendChild(select);\n  }\n\n  input.type = i === 3 || i === 4 ? 'number' : 'text';\n  input.required = true;\n  input.setAttribute('data-qa', fieldName.toLowerCase());\n\n  form.appendChild(formButton);\n  document.body.appendChild(form);\n}\n\n// Add form to table\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const formInputs = form.querySelectorAll('input, select');\n  const formValues = [];\n\n  for (let i = 0; i < formInputs.length; i++) {\n    formValues.push(formInputs[i].value);\n  }\n\n  const nameValue = formValues[0];\n  const positionValue = formValues[1];\n  const ageValue = parseInt(formValues[3]);\n  const salaryInput = parseInt(formValues[4]);\n\n  if (nameValue.trim().length < 4 && nameValue.includes(' ')) {\n    showNotification(\n      'error',\n      'Invalid Name',\n      'Name should have at least 4 letters and should not contain spaces.'\n    );\n\n    return;\n  }\n\n  if (positionValue.trim().length === 0) {\n    showNotification(\n      'error',\n      'Invalid Position',\n      'Position should not be empty and should not contain only spaces.'\n    );\n\n    return;\n  }\n\n  if (ageValue < 18 || ageValue > 90) {\n    showNotification(\n      'error',\n      'Invalid Age',\n      'Age should be between 18 and 90.'\n    );\n\n    return;\n  }\n\n  const newRow = document.createElement('tr');\n\n  for (let i = 0; i < formValues.length; i++) {\n    const newCell = document.createElement('td');\n    let cellValue = formValues[i];\n\n    if (i === 4) {\n      cellValue = '$' + salaryInput.toLocaleString('en-US');\n    }\n\n    newCell.textContent = cellValue;\n    newRow.appendChild(newCell);\n  }\n\n  tbody.appendChild(newRow);\n  form.reset();\n  rowsArray.push(newRow);\n\n  showNotification('success', 'Success', 'New employee added successfully.');\n});\n\n// Add notification\nfunction showNotification(type, title, description) {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.setAttribute('data-qa', 'notification');\n\n  const notificationTitle = document.createElement('h2');\n\n  notificationTitle.textContent = title;\n  notification.appendChild(notificationTitle);\n\n  const notificationDescription = document.createElement('p');\n\n  notificationDescription.textContent = description;\n  notification.appendChild(notificationDescription);\n\n  body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 5000);\n}\n\n// Implement editing of table cells\ntbody.addEventListener('dblclick', (e) => {\n  const clickedElement = e.target.closest('td');\n  let savedElementContent = '';\n\n  if (clickedElement && clickedElement.tagName === 'TD') {\n    savedElementContent = clickedElement.textContent;\n    clickedElement.textContent = '';\n\n    const input = document.createElement('input');\n\n    input.classList.add('cell-input');\n    clickedElement.appendChild(input);\n\n    if (clickedElement.cellIndex === 2) {\n      const select = document.createElement('select');\n\n      select.classList.add('cell-select');\n\n      for (let i = 0; i < options.length; i++) {\n        const option = document.createElement('option');\n\n        option.value = options[i];\n        option.textContent = options[i];\n        select.appendChild(option);\n      }\n\n      clickedElement.appendChild(select);\n      select.focus();\n\n      select.addEventListener('blur', () => {\n        setTimeout(() => {\n          updateCellContent(select, clickedElement, savedElementContent);\n        });\n      });\n\n      select.addEventListener('keypress', (evt) => {\n        if (evt.key === 'Enter') {\n          setTimeout(() => {\n            updateCellContent(select, clickedElement, savedElementContent);\n          });\n        }\n      });\n    } else {\n      clickedElement.appendChild(input);\n      input.focus();\n\n      input.addEventListener('blur', () => {\n        setTimeout(() => {\n          updateCellContent(input, clickedElement, savedElementContent);\n        });\n      });\n\n      input.addEventListener('keypress', (evt) => {\n        if (evt.key === 'Enter') {\n          setTimeout(() => {\n            updateCellContent(input, clickedElement, savedElementContent);\n          });\n        }\n      });\n    }\n  }\n});\n\nfunction updateCellContent(input, cell, savedContent) {\n  const columnIndex = cell.cellIndex;\n  const enteredText = input.value.trim();\n\n  if (columnIndex === 0 && enteredText.length < 4) {\n    showNotification(\n      'error',\n      'Invalid Name',\n      'Name should have at least 4 letters and should not contain spaces.'\n    );\n    cell.textContent = savedContent;\n  } else if (columnIndex === 1 && enteredText.length === 0) {\n    showNotification(\n      'error',\n      'Invalid Position',\n      'Position should not be empty and should not contain only spaces.'\n    );\n    cell.textContent = savedContent;\n  } else if (columnIndex === 3) {\n    const age = parseInt(enteredText);\n\n    if (isNaN(age) || age < 18 || age > 90) {\n      showNotification(\n        'error',\n        'Invalid Age',\n        'Age should be between 18 and 90 & should be a number'\n      );\n      cell.textContent = savedContent;\n    } else {\n      cell.textContent = age;\n    }\n  } else if (columnIndex === 4) {\n    const salary = parseFloat(enteredText.replace('$', ''));\n\n    if (isNaN(salary)) {\n      showNotification(\n        'error',\n        'Invalid Value',\n        'Value should by number'\n      );\n      cell.textContent = savedContent;\n    } else {\n      cell.textContent = '$' + salary.toLocaleString('en-US');\n    }\n  } else {\n    cell.textContent = enteredText || savedContent;\n  }\n}\n"]}